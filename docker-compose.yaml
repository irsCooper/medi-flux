# version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:4-management
    hostname: rabbitmq
    container_name: rabbit_mq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - work

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres       
      POSTGRES_PASSWORD: postgres   
      POSTGRES_DB: volga            
    ports:
      - "5432:5432"                 
    volumes:
      - postgres_data_test4:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - work

  account_service:
    build:
      context: ./account/
    container_name: account_service
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - rabbitmq
      # - redis
    env_file:
      - ./account/.env
    networks:
      - work

  hospital_service:
    build:
      context: ./hospital/
    container_name: hospital_service
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - rabbitmq
      # - redis
    env_file:
      - ./hospital/.env
    networks:
      - work

  timetable_service:
    build:
      context: ./timetable/
    container_name: timetable_service
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - rabbitmq
      # - redis
    env_file:
      - ./timetable/.env
    networks:
      - work


networks:
  work:
    driver: bridge

volumes:
  postgres_data_test4:
  rabbitmq-data:
